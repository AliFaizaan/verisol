# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'


steps:
- checkout: self
  submodules: recursive

- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: 
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

- script: |
    wget https://github.com/Z3Prover/z3/releases/download/z3-4.8.4/z3-4.8.4.d6df51951f4c-x64-ubuntu-14.04.zip
    unzip z3*.zip
    cp z3-4.8.4.d6df51951f4c-x64-ubuntu-14.04/bin/z3* $(Build.SourcesDirectory)/Tool/
  displayName: 'Download z3'

- script: |
   wget https://github.com/ethereum/solidity/releases/download/v0.5.10/solc-static-linux
   chmod +x solc-static-linux
   cp solc-static-linux $(Build.SourcesDirectory)/Tool/
  displayName: 'get solc linux'

# do this before all your .NET Core tasks
- task: DotNetCoreInstaller@0
  inputs:
    version: '2.2.301' # replace this value with the version that you need for your project
#- task: DotNetCoreCLI@2
#  inputs:
#    command: restore
#    projects: '**/*.csproj'
#- task: DotNetCoreCLI@2
#  displayName: Build
#  inputs:
#    command: build
#    projects: '**/SolToBoogie.sln'    
- task: DotNetCoreCLI@2
  inputs:
    command: run 
    arguments: '--project $(Build.SourcesDirectory)/Sources/SolToBoogieTest/SolToBoogieTest.csproj $(Build.SourcesDirectory) $(Build.SourcesDirectory)/Test/ XYZ '
- script:
     ls -la $(Build.SourcesDirectory)/corral/bin/debug/netcoreapp2.2/*
  displayName: 'inspect directory'
